---
import type { MarkdownInstance } from 'astro'
import BlogPost from '@/components/BlogPost.astro'
import BaseLayout from '@/layouts/BaseLayout.astro'
import type { Frontmatter } from '@/types/frontmatter.type'

export async function getStaticPaths() {
  const allPosts: MarkdownInstance<Frontmatter>[] = await Astro.glob<Frontmatter>('../posts/*.md')
  const uniqueTags: string[] = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())]

  return uniqueTags.map((tag: string) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag))

    return {
      params: { tag },
      props: { posts: filteredPosts },
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<BaseLayout pageTitle={tag}>
  <p>{tag}のタグが付いた記事</p>
  <ul>
    {posts.map((post) => post.url && <BlogPost url={post.url} title={post.frontmatter.title} />)}
  </ul>
</BaseLayout>
